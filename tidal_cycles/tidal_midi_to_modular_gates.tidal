-- TIDAL MIDI -> MODULAR GATES
-- Chris Beckstrom 2018-02-03

-- sequence mission control on the modular
-- using tidalcycles running on laptop
-- tidal MIDI -> IAC Driver
-- IAC driver -> pure data
-- pure data - generate osc messages
-- osc -> rpi pure data
-- rpi pure data generate MIDI messages
-- rpi midi -> arduino mission control

-- use the pd file:
-- tidal_midi_to_pd_to_osc.pd
-- to convert midi messages generated in tidal to osc messages

-- STARTUP
-- evaluate each of these first:
import Sound.Tidal.MIDI.Context

devices <- midiDevices

m1 <- midiStream devices "IAC Driver Bus 1" 1 synthController

-- reference
-- mission control setup
-- 36	 38	 40	 41	 43	 45 	<-- arduino pins
-- 2	 4	 7	 8	 12	 13	<-- MIDI numbers that trigger them

-- MAKE MIDI BELOW
-----------------------

-- tempo
bps (130/60)

-- stack
m1 $ whenmod 8 7 (sometimes (scramble 8)) $
sometimesBy 0.1 (stut 2 1 0.5) $
stack [
midinote "[36*8?]" # velocity 1,
midinote "[~ 38]" # velocity 1,
sometimesBy 0.05 (fast 2)  $ midinote "[40*8]" # velocity 1
]

m1 $ fast 2 $ stack [
midinote "[36*2]" # velocity 1,
midinote "[40*4]" # velocity 1,
midinote "[~ 38]/2" # velocity 1
]

m1 $ silence
